version: '3'
services:
  db:
    container_name: postgresql_db
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5434:5433
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - db 
     
  app:
    container_name: app
    build: .
    command: bash -c "python3 main.py"
    volumes:
      - .:/app
      - "./logs/:/logs/:rw"
      - ./migrations:/app/migrations
    ports:
      - 8000:8000
    restart: always 
    depends_on:
      - db
    labels: # new
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`test.localhost`)"
  
  traefik: # new
    image: traefik:v2.9.6
    ports:
      - 8008:80
      - 8082:8080
    volumes:
      - "./traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  redis:
    container_name: redis
    image: redis:7.0.8-alpine

  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A celery_worker.celery worker --beat --loglevel=info
    volumes:
      - .:/app
      - "./logs/:/logs/:rw"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis

  flower:
    container_name: flower
    build: .
    command: celery -A celery_worker.celery flower --port=5555  
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis
      - celery_worker

  alembic_upgrade:
    image: src_app:latest
    command: >
      sh -c "alembic upgrade head && tail -f /dev/null"
    depends_on:
      - app
    volumes:
      - ./migrations:/app/migrations
volumes:
  postgres_data:
